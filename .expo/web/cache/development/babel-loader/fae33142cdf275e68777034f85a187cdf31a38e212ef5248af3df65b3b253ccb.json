{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from \"yup\";\nimport Validator from 'email-validator';\nimport { firebase } from \"../../firebase\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar LoginForm = function LoginForm(_ref) {\n  var navigation = _ref.navigation;\n  var LoginFormSchema = Yup.object().shape({\n    email: Yup.string().email().required('An email is required'),\n    password: Yup.string().required().min(6, 'Your password has to have atleast 6 characters')\n  });\n  var onLogin = function () {\n    var _ref2 = _asyncToGenerator(function* (email, password) {\n      try {\n        var auth = getAuth(firebase);\n        signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n          console.log(\"Firebase login Successful \", email, password);\n        }).catch(function (error) {\n          var errorCode = error.code;\n          var errorMessage = error.message;\n          Alert.alert('Invalid Credentials', errorMessage, [{\n            text: 'OK',\n            onPress: function onPress() {},\n            style: 'cancel'\n          }, {\n            text: 'Sign Up',\n            onPress: function onPress() {\n              return navigation.push('SignupScreen');\n            }\n          }]);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function onLogin(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.wrapper,\n    children: _jsx(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      onSubmit: function onSubmit(values) {\n        onLogin(values.email, values.password);\n      },\n      validationSchema: LoginFormSchema,\n      validateOnMount: true,\n      children: function children(_ref3) {\n        var handleChange = _ref3.handleChange,\n          handleBlur = _ref3.handleBlur,\n          handleSubmit = _ref3.handleSubmit,\n          values = _ref3.values,\n          isValid = _ref3.isValid;\n        return _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: [styles.inputField, {\n              borderColor: values.email.length < 1 || Validator.validate(values.email) ? '#ccc' : 'red'\n            }],\n            children: _jsx(TextInput, {\n              placeholder: \"Phone Number, UserName or email\",\n              placeholderTextColor: \"#444\",\n              autoCapitalize: \"none\",\n              keyboardType: \"email-address\",\n              textContentType: \"emailAddress\",\n              autoFocus: true,\n              onChangeText: handleChange('email'),\n              onBlur: handleBlur('email'),\n              value: values.email\n            })\n          }), _jsx(View, {\n            style: [styles.inputField, {\n              borderColor: values.password.length < 1 || values.password.length > 5 ? '#ccc' : 'red'\n            }],\n            children: _jsx(TextInput, {\n              placeholder: \"Password\",\n              placeholderTextColor: \"#444\",\n              autoCapitalize: \"none\",\n              autoCorrect: false,\n              secureTextEntry: true,\n              textContentType: \"password\",\n              onChangeText: handleChange('password'),\n              onBlur: handleBlur('password'),\n              value: values.password\n            })\n          }), _jsx(View, {\n            style: {\n              alignItems: 'flex-end',\n              marginBottom: 30\n            },\n            children: _jsx(Text, {\n              style: {\n                color: 'red'\n              },\n              children: \"Forgot Password\"\n            })\n          }), _jsx(Pressable, {\n            style: styles.button(isValid),\n            onPress: handleSubmit,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Log In\"\n            })\n          }), _jsxs(View, {\n            style: styles.signupContainer,\n            children: [_jsx(Text, {\n              children: \"Don't have an account?\"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return navigation.push('SignupScreen');\n              },\n              children: _jsx(Text, {\n                style: {\n                  color: '#6BB0F5'\n                },\n                children: \" Sign Up\"\n              })\n            })]\n          })]\n        });\n      }\n    })\n  });\n};\nexport default LoginForm;\nvar styles = StyleSheet.create({\n  inputField: {\n    borderRadius: 4,\n    padding: 12,\n    backgroundColor: '#FAFAFA',\n    marginBottom: 10,\n    borderWidth: 1\n  },\n  wrapper: {\n    marginTop: 80\n  },\n  signupContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 50\n  },\n  button: function button(isValid) {\n    return {\n      backgroundColor: isValid ? '#30A2FF' : '#9DB2BF',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 50,\n      borderRadius: 4,\n      width: \"100%\"\n    };\n  },\n  buttonText: {\n    fontWeight: '400',\n    fontSize: 20,\n    color: '#fff'\n  }\n});","map":{"version":3,"names":["React","Formik","Yup","Validator","firebase","getAuth","signInWithEmailAndPassword","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LoginForm","_ref","navigation","LoginFormSchema","object","shape","email","string","required","password","min","onLogin","_ref2","_asyncToGenerator","auth","then","userCredential","console","log","catch","error","errorCode","code","errorMessage","message","Alert","alert","text","onPress","style","push","_x","_x2","apply","arguments","View","styles","wrapper","children","initialValues","onSubmit","values","validationSchema","validateOnMount","_ref3","handleChange","handleBlur","handleSubmit","isValid","inputField","borderColor","length","validate","TextInput","placeholder","placeholderTextColor","autoCapitalize","keyboardType","textContentType","autoFocus","onChangeText","onBlur","value","autoCorrect","secureTextEntry","alignItems","marginBottom","Text","color","Pressable","button","buttonText","signupContainer","TouchableOpacity","StyleSheet","create","borderRadius","padding","backgroundColor","borderWidth","marginTop","flexDirection","justifyContent","height","width","fontWeight","fontSize"],"sources":["C:/Users/soumy/OneDrive/Desktop/insta/ig-clone/components/loginScreen/loginForm.js"],"sourcesContent":["import { View, Text, TextInput, StyleSheet, TouchableOpacity, Pressable, Alert } from 'react-native'\r\nimport React from 'react'\r\nimport { Formik } from 'formik'\r\nimport * as Yup from \"yup\";\r\nimport Validator from 'email-validator'\r\nimport {firebase} from '../../firebase'\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nconst LoginForm = ({navigation}) => {\r\n  const LoginFormSchema=Yup.object().shape({\r\n    email: Yup.string().email().required('An email is required'),\r\n    password:Yup.string()\r\n    .required()\r\n    .min(6, 'Your password has to have atleast 6 characters'),\r\n  })\r\n  const onLogin=async (email,password)=>{\r\n    try{\r\n      const auth=getAuth(firebase);\r\n      signInWithEmailAndPassword(auth,email, password)\r\n  .then((userCredential) => {\r\n    console.log(\"Firebase login Successful \",email, password);\r\n  })\r\n  .catch((error) => {\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    Alert.alert(\r\n      'Invalid Credentials',\r\n      errorMessage,\r\n      [\r\n        {\r\n          text:'OK',\r\n          onPress:()=>{},\r\n          style:'cancel',\r\n        },\r\n        {\r\n          text: 'Sign Up', onPress:()=> navigation.push('SignupScreen')\r\n        }\r\n      ]\r\n    )\r\n  });\r\n      \r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n  }\r\n  return (\r\n    <View style={styles.wrapper}>\r\n      <Formik\r\n      initialValues={{email: '',password:''}}\r\n      onSubmit={(values)=>{\r\n        onLogin(values.email, values.password);\r\n      }}\r\n      validationSchema={LoginFormSchema}\r\n      validateOnMount={true}>\r\n        {({handleChange, handleBlur, handleSubmit, values, isValid})=>(<>\r\n          <View style={[styles.inputField,{borderColor:(values.email.length<1 || Validator.validate(values.email))?'#ccc':'red'}]}>\r\n      <TextInput\r\n      placeholder='Phone Number, UserName or email'\r\n      placeholderTextColor=\"#444\"\r\n      autoCapitalize='none'\r\n      keyboardType='email-address'\r\n      textContentType='emailAddress'\r\n      autoFocus={true}\r\n      onChangeText={handleChange('email')}\r\n      onBlur={handleBlur('email')}\r\n      value={values.email}/>\r\n      </View>\r\n      <View style={[styles.inputField,{borderColor:(values.password.length<1 || values.password.length>5)?'#ccc':'red'}]}>\r\n      <TextInput\r\n      placeholder='Password'\r\n      placeholderTextColor=\"#444\"\r\n      autoCapitalize='none'\r\n      autoCorrect={false}\r\n      secureTextEntry={true}\r\n      textContentType='password'\r\n      onChangeText={handleChange('password')}\r\n      onBlur={handleBlur('password')}\r\n      value={values.password}\r\n      />\r\n      </View>\r\n      <View style={{alignItems:'flex-end', marginBottom:30}}>\r\n        <Text style={{color:'red'}}>Forgot Password</Text>\r\n      </View>\r\n      <Pressable\r\n      style={styles.button(isValid)}\r\n      onPress={handleSubmit}\r\n      >\r\n        <Text \r\n        style={styles.buttonText}\r\n        >Log In</Text>\r\n      </Pressable>\r\n      <View style={styles.signupContainer}>\r\n          <Text>Don't have an account?</Text>\r\n          <TouchableOpacity onPress={()=>navigation.push('SignupScreen')}>\r\n            <Text style={{color:'#6BB0F5'}}> Sign Up</Text>\r\n          </TouchableOpacity>\r\n      </View>\r\n        </>)}\r\n      </Formik>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n\r\nconst styles=StyleSheet.create({\r\n    inputField:{\r\n        borderRadius:4,\r\n        padding:12,\r\n        backgroundColor:'#FAFAFA',\r\n        marginBottom:10,\r\n        borderWidth:1,\r\n    },\r\n    wrapper:{\r\n        marginTop:80,\r\n    },\r\n    signupContainer:{\r\n      flexDirection:'row',\r\n      justifyContent:'center',\r\n      marginTop:50\r\n    },\r\n    button:(isValid)=>({\r\n      backgroundColor:isValid ? '#30A2FF' : '#9DB2BF',\r\n      alignItems:'center',\r\n      justifyContent:'center',\r\n      height:50,\r\n      borderRadius:4,\r\n      width:\"100%\"\r\n    }),\r\n    buttonText:{\r\n      fontWeight:'400',\r\n      fontSize:20,\r\n      color:'#fff'\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}