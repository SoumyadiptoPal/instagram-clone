{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, formik } from \"formik\";\nimport { Divider } from \"react-native-elements\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar uploadPostSchema = Yup.object().shape({\n  imageUrl: Yup.string().url().required(\"A Url is required\"),\n  caption: Yup.string().max(2200, \"Caption has reached the Character limit\")\n});\nvar PlaceholderImg = \"https://images.unsplash.com/photo-1597655601841-214a4cfe8b2c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8bW91bnRhaW4lMjBzY2VuZXJ5fGVufDB8fDB8fHww&w=1000&q=80\";\nvar FormikPostUploader = function FormikPostUploader(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(PlaceholderImg),\n    _useState2 = _slicedToArray(_useState, 2),\n    thumbnailUrl = _useState2[0],\n    setThumbnailUrl = _useState2[1];\n  return _jsx(Formik, {\n    initialValues: {\n      caption: \"\",\n      imageUrl: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n      navigation.goBack();\n    },\n    validationSchema: uploadPostSchema,\n    validateOnMount: true,\n    children: function children(_ref2) {\n      var handleBlur = _ref2.handleBlur,\n        handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values,\n        errors = _ref2.errors,\n        isValid = _ref2.isValid;\n      return _jsxs(_Fragment, {\n        children: [_jsxs(View, {\n          style: {\n            margin: 20,\n            justifyContent: \"space-between\",\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Image, {\n            source: {\n              uri: thumbnailUrl ? thumbnailUrl : PlaceholderImg\n            },\n            style: {\n              width: 100,\n              height: 100\n            }\n          }), _jsx(View, {\n            style: {\n              flex: 1,\n              marginLeft: 10\n            },\n            children: _jsx(TextInput, {\n              placeholder: \"Enter Captions....\",\n              placeholderTextColor: \"gray\",\n              multiline: true,\n              style: {\n                color: \"white\",\n                fontSize: 20\n              },\n              onChangeText: handleChange(\"caption\"),\n              onBlur: handleBlur('caption'),\n              value: values.caption\n            })\n          })]\n        }), _jsx(Divider, {\n          width: 0.2,\n          orientation: \"vertical\"\n        }), _jsx(TextInput, {\n          onChange: function onChange(e) {\n            return setThumbnailUrl(e.nativeEvent.text);\n          },\n          placeholder: \"Enter Image Url...\",\n          placeholderTextColor: \"gray\",\n          style: {\n            color: \"white\",\n            fontSize: 18\n          },\n          onChangeText: handleChange('imageUrl'),\n          onBlur: handleBlur('imageUrl'),\n          value: values.imageUrl\n        }), errors.imageUrl && _jsx(Text, {\n          style: {\n            fontSize: 10,\n            color: \"red\"\n          },\n          children: errors.imageUrl\n        }), _jsx(Button, {\n          onPress: handleSubmit,\n          title: \"Share\",\n          disabled: !isValid,\n          children: \"Share\"\n        })]\n      });\n    }\n  });\n};\nexport default FormikPostUploader;","map":{"version":3,"names":["React","useState","Yup","Formik","formik","Divider","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","uploadPostSchema","object","shape","imageUrl","string","url","required","caption","max","PlaceholderImg","FormikPostUploader","_ref","navigation","_useState","_useState2","_slicedToArray","thumbnailUrl","setThumbnailUrl","initialValues","onSubmit","values","console","log","goBack","validationSchema","validateOnMount","children","_ref2","handleBlur","handleChange","handleSubmit","errors","isValid","View","style","margin","justifyContent","flexDirection","Image","source","uri","width","height","flex","marginLeft","TextInput","placeholder","placeholderTextColor","multiline","color","fontSize","onChangeText","onBlur","value","orientation","onChange","e","nativeEvent","text","Text","Button","onPress","title","disabled"],"sources":["C:/Users/soumy/OneDrive/Desktop/insta/ig-clone/components/newPost/FormikPostUploader.js"],"sourcesContent":["import { View, Text, TextInput, Image, Button } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, formik } from \"formik\";\r\nimport { Divider } from \"react-native-elements\";\r\n\r\nconst uploadPostSchema = Yup.object().shape({\r\n  imageUrl: Yup.string().url().required(\"A Url is required\"),\r\n  caption: Yup.string().max(2200, \"Caption has reached the Character limit\"),\r\n});\r\n\r\nconst PlaceholderImg =\r\n  \"https://images.unsplash.com/photo-1597655601841-214a4cfe8b2c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8bW91bnRhaW4lMjBzY2VuZXJ5fGVufDB8fDB8fHww&w=1000&q=80\";\r\n\r\nconst FormikPostUploader = ({navigation}) => {\r\n  const [thumbnailUrl, setThumbnailUrl] = useState(PlaceholderImg);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ caption: \"\", imageUrl: \"\" }}\r\n      onSubmit={(values) => {\r\n        console.log(values)\r\n        navigation.goBack()}}\r\n      validationSchema={uploadPostSchema}\r\n      validateOnMount={true}\r\n    >\r\n      {({\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        values,\r\n        errors,\r\n        isValid,\r\n      }) => (\r\n        <>\r\n          <View style={{margin:20, justifyContent:\"space-between\",flexDirection:\"row\"}}>\r\n            <Image\r\n              source={{ uri: thumbnailUrl ? thumbnailUrl:PlaceholderImg }}\r\n              style={{ width: 100, height: 100 }}\r\n            />\r\n            <View style={{flex:1, marginLeft:10}}>\r\n            <TextInput\r\n            placeholder=\"Enter Captions....\"\r\n            placeholderTextColor=\"gray\"\r\n            multiline={true}\r\n            style={{ color: \"white\", fontSize: 20 }}\r\n            onChangeText={handleChange(\"caption\")}\r\n            onBlur={handleBlur('caption')}\r\n            value={values.caption} \r\n          />      \r\n        </View>\r\n          </View>\r\n          <Divider width={0.2} orientation=\"vertical\"/>\r\n\r\n          <TextInput\r\n          onChange={e=>setThumbnailUrl(e.nativeEvent.text)}\r\n            placeholder=\"Enter Image Url...\"\r\n            placeholderTextColor=\"gray\"\r\n            style={{ color: \"white\", fontSize:18 }}\r\n            onChangeText={handleChange('imageUrl')}\r\n            onBlur={handleBlur('imageUrl')}\r\n            value={values.imageUrl}\r\n          />\r\n          {errors.imageUrl && (\r\n            <Text style={{fontSize:10, color:\"red\"}}>\r\n              {errors.imageUrl}\r\n            </Text>\r\n          )}\r\n\r\n          <Button onPress={handleSubmit} title=\"Share\" disabled={!isValid}>Share</Button>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default FormikPostUploader;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}